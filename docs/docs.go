// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag/v2"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/agent/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves agent information with optional ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent management"
                ],
                "summary": "Get agent information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.API500"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "updates an agent by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent management"
                ],
                "summary": "Update agent information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent data",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.AgentMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.API500"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "updates an agent by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent management"
                ],
                "summary": "Update agent information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent data",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.AgentMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.API500"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an agent by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent management"
                ],
                "summary": "Delete agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    }
                }
            }
        },
        "/cmd": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates and queues a command request for an agent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent management"
                ],
                "summary": "Send command to agent",
                "parameters": [
                    {
                        "description": "Command request",
                        "name": "cmdRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.CmdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APICmdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    }
                }
            }
        },
        "/config/agents": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the current global agent configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve global agent configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the global agent configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update global agent configuration",
                "parameters": [
                    {
                        "description": "Agent configuration",
                        "name": "configAgents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.ConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the global agent configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update global agent configuration",
                "parameters": [
                    {
                        "description": "Agent configuration",
                        "name": "configAgents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.ConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            }
        },
        "/config/server": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the current server configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve server configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the server configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update server configuration",
                "parameters": [
                    {
                        "description": "Server configuration",
                        "name": "configServer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.ConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the server configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update server configuration",
                "parameters": [
                    {
                        "description": "Server configuration",
                        "name": "configServer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.ConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves server events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Retrieve events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in YYYYMMDD format",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date in YYYYMMDD format",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time in Unix timestamp format",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time in Unix timestamp format",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "agent_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schema.APIEventsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.API500"
                        }
                    }
                }
            }
        },
        "/files/list": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates deploy.json containing names and hashes of uem-* files",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Generate deploy.json",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.API500"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates deploy.json containing names and hashes of uem-* files",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Generate deploy.json",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.API500"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate a user and return access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User authentication",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "schema": {
                            "$ref": "#/definitions/schema.APILoginResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Pinging the server tests authentication and communication",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Testing"
                ],
                "summary": "Ping the server",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Refreshes a user authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh token",
                "parameters": [
                    {
                        "description": "Refresh request",
                        "name": "refreshRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APITokenRefreshResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            }
        },
        "/regToken": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the current registration token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "\"Registration token\""
                ],
                "summary": "Retrieve registration token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.API500"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new registration token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "\"Registration token\""
                ],
                "summary": "Create new registration token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.API500"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Agent requests registration and receives access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent communication"
                ],
                "summary": "Agent registration",
                "parameters": [
                    {
                        "description": "Agent sync request",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.AgentRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIRegisterResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            }
        },
        "/report": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generates a report on the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reporting"
                ],
                "summary": "Generate report",
                "parameters": [
                    {
                        "description": "Report request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.ReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIReportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    }
                }
            }
        },
        "/request/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtain information about one or more requests sent to agents This includes the status and agent response, if any.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent management"
                ],
                "summary": "Retrieve request status information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIRequestStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schema.API500"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a request by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent management"
                ],
                "summary": "Delete request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    }
                }
            }
        },
        "/reset/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Resets triggers for the specified agent. With respect to the \"wipe\" and \"uninstall\" triggers, this is only useful before the agent's next sync with the server.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent management"
                ],
                "summary": "Reset agent triggers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Resets triggers for the specified agent. With respect to the \"wipe\" and \"uninstall\" triggers, this is only useful before the agent's next sync with the server.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent management"
                ],
                "summary": "Reset agent triggers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APIGenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.API400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schema.API404"
                        }
                    }
                }
            }
        },
        "/sync": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Agent syncs with the server to send and receive messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent communication"
                ],
                "summary": "Agent sync with server",
                "parameters": [
                    {
                        "description": "Agent sync request",
                        "name": "syncRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.AgentSyncRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.APISyncResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schema.API401"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "schema.API400": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "details": {
                    "type": "string",
                    "example": "bad request"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "schema.API401": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "details": {
                    "type": "string",
                    "example": "authentication failed"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "schema.API404": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "details": {
                    "type": "string",
                    "example": "object not found"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "schema.API500": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "details": {
                    "type": "string",
                    "example": "internal server error"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "schema.APICmdResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "details": {
                    "type": "string",
                    "example": "request queued for agent"
                },
                "request_id": {
                    "type": "string",
                    "example": "R-6f9dcb2e-2e1b-4c3a-8a67-5b3e0d740df6"
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "schema.APIConfigResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "details": {
                    "type": "string",
                    "example": "Config set retrieved"
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "schema.APIEventsResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.AgentEvent"
                    }
                },
                "details": {
                    "type": "string",
                    "example": "events"
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "schema.APIGenericResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "HTTP status code",
                    "type": "integer",
                    "example": 200
                },
                "details": {
                    "description": "Optional response details",
                    "type": "string",
                    "example": "request processed"
                },
                "status": {
                    "description": "API status response - see schema/apiMeta.go",
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "schema.APILoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "JWT access token",
                    "type": "string",
                    "example": "jwt"
                },
                "code": {
                    "description": "HTTP status code",
                    "type": "integer",
                    "example": 200
                },
                "refresh_token": {
                    "description": "JTW refresh token",
                    "type": "string",
                    "example": "jwt"
                },
                "status": {
                    "description": "Text Status",
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "schema.APIRegisterResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "agent_id": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "schema.APIReportResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "report": {
                    "$ref": "#/definitions/schema.Report"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "schema.APIRequestStatusResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "report": {
                    "$ref": "#/definitions/schema.AgentRequestRecordList"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "schema.APISyncResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "conf": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "details": {
                    "type": "string"
                },
                "requests": {
                    "description": "Requests for the agent to process and respond to",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.AgentRequest"
                    }
                },
                "status": {
                    "type": "string"
                },
                "triggers": {
                    "$ref": "#/definitions/schema.AgentTriggers"
                }
            }
        },
        "schema.APITokenRefreshResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "JWT access token",
                    "type": "string",
                    "example": "jwt"
                },
                "code": {
                    "description": "HTTP status code",
                    "type": "integer",
                    "example": 200
                },
                "status": {
                    "description": "Text Status",
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "schema.AgentEvent": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "event": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schema.AgentMessage": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "description": "The ID of the agent",
                    "type": "string"
                },
                "message": {
                    "description": "The message itself",
                    "type": "string"
                },
                "message_type": {
                    "description": "Kind of message (avoiding Type as it is a reserved word)",
                    "type": "string"
                },
                "sent": {
                    "description": "Timestamp of when the message was sent",
                    "type": "string"
                }
            }
        },
        "schema.AgentMeta": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "agent_id": {
                    "type": "string"
                },
                "build": {
                    "type": "integer"
                },
                "first_seen": {
                    "type": "string"
                },
                "friendly_name": {
                    "type": "string"
                },
                "last_ip": {
                    "type": "string"
                },
                "last_seen": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/schema.AgentStatus"
                },
                "triggers": {
                    "$ref": "#/definitions/schema.AgentTriggers"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "schema.AgentRegisterRequest": {
            "type": "object",
            "properties": {
                "build": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "schema.AgentRequest": {
            "type": "object",
            "properties": {
                "ack_required": {
                    "type": "boolean"
                },
                "agent_id": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "request": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "requester": {
                    "type": "string"
                }
            }
        },
        "schema.AgentRequestRecord": {
            "type": "object",
            "properties": {
                "ack_required": {
                    "type": "boolean"
                },
                "agent": {
                    "type": "string"
                },
                "agent_id": {
                    "type": "string"
                },
                "cancelled": {
                    "type": "boolean"
                },
                "last_updated": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "request_id": {
                    "type": "string"
                },
                "requester": {
                    "type": "string"
                },
                "response_data": {},
                "response_details": {
                    "type": "string"
                },
                "send_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "time_created": {
                    "type": "string"
                }
            }
        },
        "schema.AgentRequestRecordList": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.AgentRequestRecord"
                    }
                }
            }
        },
        "schema.AgentResponse": {
            "type": "object",
            "properties": {
                "cmd": {
                    "type": "string"
                },
                "data": {},
                "request_id": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "schema.AgentStatus": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "last_updated": {
                    "type": "string"
                }
            }
        },
        "schema.AgentSyncRequest": {
            "type": "object",
            "properties": {
                "build": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.AgentMessage"
                    }
                },
                "responses": {
                    "description": "List of responses to previous requests",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.AgentResponse"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "schema.AgentTriggers": {
            "type": "object",
            "properties": {
                "lost": {
                    "type": "boolean",
                    "example": false
                },
                "uninstall": {
                    "type": "boolean",
                    "example": false
                },
                "wipe": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "schema.CmdRequest": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "cmd": {
                    "type": "string"
                }
            }
        },
        "schema.ConfigRequest": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "schema.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schema.RefreshRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "schema.Report": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schema.ReportRequest": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "report": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "UEM-Server",
	Description:      "Unified Endpoint Management Server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
