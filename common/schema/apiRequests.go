//
// Copyright (c) 2024-2025 Tenebris Technologies Inc.
// Please see the LICENSE file for details
//

package schema

import "time"

// AgentRegisterRequest is sent from the agent to the server to register
type AgentRegisterRequest struct {
	Token   string `json:"token"`
	Version string `json:"version"`
	Build   int    `json:"build"`
}

// LoginRequest is sent to the server by a user (administrator) to obtain a token
type LoginRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// NewLoginRequest is a helper function to create a new LoginRequest
func NewLoginRequest(username, password string) LoginRequest {
	return LoginRequest{Username: username, Password: password}
}

// RefreshRequest is sent to the server to refresh an access token using a refresh token
type RefreshRequest struct {
	RefreshToken string `json:"refresh_token"`
}

// AgentSyncRequest is sent by an agent to the server to synchronize data
type AgentSyncRequest struct {
	Version   string          `json:"version"`
	Build     int             `json:"build"`
	Messages  []AgentMessage  `json:"messages"`
	Responses []AgentResponse `json:"responses"` // List of responses to previous requests
}

// AgentMessage is a message from the agent to the server
type AgentMessage struct {
	AgentID     string    `json:"agent_id"`     // The ID of the agent
	Sent        time.Time `json:"sent"`         // Timestamp of when the message was sent
	MessageType string    `json:"message_type"` // Kind of message (avoiding Type as it is a reserved word)
	Message     string    `json:"message"`      // The message itself
}

// AgentResponse contains a response from the agent to a request (command) from the server
// It is also self-generated by the agent to send status information when the timer requires it
type AgentResponse struct {
	RequestID string `json:"request_id"`
	Cmd       string `json:"cmd"`
	Response  string `json:"response"`
	Success   bool   `json:"success"`
	Data      any    `json:"data,omitempty"`
}

// NewAgentResponse creates a new AgentResponse and initialized the map to avoid errors
func NewAgentResponse() AgentResponse {
	return AgentResponse{}
}

// CmdRequest is a command to the server that will be queued for an agent
type CmdRequest struct {
	Cmd        string            `json:"cmd"`
	Parameters map[string]string `json:"args"`
}

// NewCmdRequest creates a new CmdRequest and initializes the map to avoid errors
func NewCmdRequest() CmdRequest {
	return CmdRequest{
		Parameters: make(map[string]string),
	}
}

// ConfigRequest is used to change configuration parameters
type ConfigRequest struct {
	Parameters map[string]string `json:"parameters"`
}

// NewConfigRequest creates a new ConfigRequest and initializes the map to avoid errors
func NewConfigRequest() ConfigRequest {
	return ConfigRequest{
		Parameters: make(map[string]string),
	}
}

// ReportRequest is used to request a report from the server
type ReportRequest struct {
	Report     string            `json:"report"`
	Parameters map[string]string `json:"args"`
}

// NewReportRequest creates a new ReportRequest and initializes the map to avoid errors
func NewReportRequest() ReportRequest {
	return ReportRequest{}
}
